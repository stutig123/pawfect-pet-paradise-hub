name: DevSecOps CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  security-events: write  # Needed for SARIF upload

jobs:
  code_quality:
    name: ðŸ“Š Code Quality Check (SonarCloud)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        
      - name: Run tests with coverage
        run: npm test -- --coverage || true
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install SonarQube Scanner
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006.zip
          unzip sonar-scanner.zip
          mv sonar-scanner-5.0.1.3006 sonar-scanner
          chmod +x sonar-scanner/bin/sonar-scanner
          echo "$(pwd)/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Run SonarCloud Scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=stutig123_pawfect-pet-paradise-hub \
            -Dsonar.organization=stutig123 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.sources=. \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.branch.name=main
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security_scan:
    name: ðŸ”’ Security Scan (Trivy)
    runs-on: ubuntu-latest
    needs: code_quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  terraform_provisioning:
    name: ðŸ›  Terraform Infrastructure Provisioning
    runs-on: ubuntu-latest
    needs: code_quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Terraform Init
        run: Terraform init
        working-directory: Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "apsouth-1"

      - name: Terraform Apply
        run: Terraform apply -auto-approve
        working-directory: Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "ap-south-1"

  docker_build:
    name: ðŸ›¥ Docker Build & Push
    runs-on: ubuntu-latest
    needs: [code_quality, security_scan, terraform_provisioning]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: stutigambhir/petshop:latest
          cache-from: type=gha

  deploy:
    name: ðŸš€ Deploy to EC2 with Ansible
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Create SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > stuti-key-1.pem
          chmod 600 stuti-key-1.pem

      - name: Run Ansible Playbook
        run: |
          ansible-playbook ansible/playbook.yml -i ansible/inventory.ini --private-key stuti-key.pem -u ${{ secrets.EC2_USER }}
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
